generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model crime {
  id              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String       @db.VarChar(255)
  num_players     Int
  num_killers     Int
  victim_name     String       @db.VarChar(255)
  organization_id String       @db.Uuid
  created_at      DateTime     @default(now()) @db.Timestamp(6)
  updated_at      DateTime     @default(now()) @db.Timestamp(6)
  organization    organization @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  knowledge       knowledge[]
  player          player[]
}

model knowledge {
  id               String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name             String             @db.VarChar(255)
  type             String             @db.VarChar(255)
  num_witnesses    Int
  num_characters   Int
  witness_text     String
  self_text        String
  crime_id         String             @db.Uuid
  created_at       DateTime           @default(now()) @db.Timestamp(6)
  updated_at       DateTime           @default(now()) @db.Timestamp(6)
  crime            crime              @relation(fields: [crime_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  player_knowledge player_knowledge[]
}

model organization {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  crime       crime[]
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model player {
  id                String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name              String             @db.VarChar(255)
  personality_trait String             @db.VarChar(255)
  user_id           String             @db.Uuid
  crime_id          String             @db.Uuid
  created_at        DateTime           @default(now()) @db.Timestamp(6)
  updated_at        DateTime           @default(now()) @db.Timestamp(6)
  crime             crime              @relation(fields: [crime_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user              user               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  player_knowledge  player_knowledge[]
}

model player_knowledge {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  player_id    String    @db.Uuid
  knowledge_id String    @db.Uuid
  created_at   DateTime  @default(now()) @db.Timestamp(6)
  updated_at   DateTime  @default(now()) @db.Timestamp(6)
  knowledge    knowledge @relation(fields: [knowledge_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  player       player    @relation(fields: [player_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model user {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique @db.VarChar(255)
  firstName    String?        @db.VarChar(255)
  lastName     String?        @db.VarChar(255)
  roq_user_id  String         @db.VarChar(255)
  tenant_id    String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  organization organization[]
  player       player[]
}
